apply plugin: 'idea'

//artifactoryPublish.skip = true

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'maven-publish'

    group = "com.gamboatech.my-service"
    version = "${application_version}"
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    test {
        useJUnitPlatform()
    }
    dependencies {
        implementation 'io.projectreactor:reactor-core'
        implementation 'io.projectreactor.addons:reactor-extra'
        implementation 'org.springframework:spring-context'
        implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_databind_version}"
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation "org.slf4j:slf4j-api:${slf4j_api_version}"
        compileOnly "org.projectlombok:lombok:${lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${lombok_version}"
        testCompileOnly "org.projectlombok:lombok:${lombok_version}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
        implementation platform("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")
        testImplementation "org.apache.commons:commons-lang3:${commons_lang3_version}"


        // T E S T
        testImplementation "io.projectreactor.tools:blockhound-junit-platform:${blockhound_junit_platform_version}"
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.withType(Test).configureEach {
        if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_13)) {
            jvmArgs += [
                    "-XX:+AllowRedefinitionToAddDeleteMethods"
            ]
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

tasks.named('wrapper') {
    gradleVersion = "${gradle_version}"
}